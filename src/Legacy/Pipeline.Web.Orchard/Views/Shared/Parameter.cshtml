@model Pipeline.Web.Orchard.Models.ParameterModel
@switch (Model.Parameter.Type) {
    case "date":
    case "datetime":
        var requestedDate = Request.QueryString[Model.Parameter.Name] ?? (string.IsNullOrEmpty(Model.Parameter.Value) ? DateTime.Now.ToString("yyyy-MM-dd") : Model.Parameter.Value);
        <input class="form-control date"
                size="10"
                required="@Model.Parameter.Required"
                type="datetime"
                name="@Model.Parameter.Name"
                placeholder="@Model.Parameter.Label"
                value="@requestedDate"
                @(Html.Raw(Model.Parameter.Width > 0 ? "style=\"width:" + Model.Parameter.Width + "px\"" : string.Empty)) />
        break;
    default:
        var requestedValue = Request.QueryString[Model.Parameter.Name] ?? Model.Parameter.Value;
        if (string.IsNullOrEmpty(Model.Parameter.Map)) {
            <input class="form-control"
                    name="@Model.Parameter.Name"
                    required="@Model.Parameter.Required"
                    value="@requestedValue"
                    placeholder="@Model.Parameter.Label"
                    @(Html.Raw(Model.Parameter.Width > 0 ? "style=\"width:" + Model.Parameter.Width + "px\"" : string.Empty)) />
        } else {
            <select class="form-control"
                    size="1"
                    multiple="@(Model.Parameter.Multiple)"
                    name="@Model.Parameter.Name"
                    @(Html.Raw(Model.Parameter.Width > 0 ? "style=\"width:" + Model.Parameter.Width + "px\"" : string.Empty))>
                @{
                    var items = Model.Maps.First(m => m.Name == Model.Parameter.Map).Items;
                    if (Model.Parameter.Multiple) {
                        var values = Request.QueryString[Model.Parameter.Name] == null ? new HashSet<string>() : new HashSet<string>(Request.QueryString.GetValues(Model.Parameter.Name));
                        foreach (var item in items) {
                            if (item.To != null && item.From != null) {
                                <option value="@item.To" selected="@(values.Contains(item.To.ToString()))">@item.From</option>
                            }
                        }
                    } else {
                        <option value="*" selected="@(requestedValue == "*")">ALL</option>
                        foreach (var item in items) {
                            if (item.To != null && item.From != null) {
                                <option value="@item.To" selected="@(item.To.ToString() == requestedValue)">@item.From</option>
                            }
                        }
                    }
                }
            </select>
        }
        break;
}
