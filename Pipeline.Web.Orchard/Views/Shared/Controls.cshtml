@using Orchard
@using Orchard.ContentManagement
@using Orchard.Core.Contents
@using Pipeline.Web.Orchard
@using Pipeline.Web.Orchard.Models
@using Pipeline.Web.Orchard.Services.Contracts
@using Transformalize.Configuration
@model ReportViewModel

@{
   var settings = WorkContext.CurrentSite.As<PipelineSettingsPart>();
   var hasParameters = Model.Process.Parameters.Any(p => p.Prompt);
   var hasActions = Model.Process.Actions.Any(a => !a.Before && !a.After && !string.IsNullOrEmpty(a.Description) && !a.Description.StartsWith("Batch", StringComparison.OrdinalIgnoreCase));
   var entity = Model.Process.Entities.FirstOrDefault() ?? new Entity { Name = "Missing Entity" };
   var pageSizes = new List<int>();
   pageSizes.AddRange(entity.Page > 0 ? Model.Part.Sizes(Model.Part.PageSizes) : new int[0]);
   pageSizes.AddRange(entity.Page > 0 && (Model.Process.Mode == "map" || Model.Process.Mode == "calendar") ? Model.Part.Sizes(Model.Part.MapSizes) : new int[0]);

   var allFields = entity.GetAllFields().Where(f => !f.System).ToArray();
   var hasCoordinates = allFields.Any(f => f.Alias.StartsWith("lat", StringComparison.OrdinalIgnoreCase)) && allFields.Any(f => f.Alias.StartsWith("lon", StringComparison.OrdinalIgnoreCase));
   var orchard = WorkContext.Resolve<IOrchardServices>();

   var linkService = WorkContext.Resolve<ILinkService>();
   var exportCsvLink = linkService.Create(Request, Session, Model.Part.Id, Url.Action("Index", "Export", new RouteValueDictionary { { "Id", Model.Part.Id } }), "csv", true);
   var exportXlsxLink = linkService.Create(Request, Session, Model.Part.Id, Url.Action("Index", "Export", new RouteValueDictionary { { "Id", Model.Part.Id } }), "xlsx", true);
   var exportJsonLink = linkService.Create(Request, Session, Model.Part.Id, Url.Action("Index", "Export", new RouteValueDictionary { { "Id", Model.Part.Id } }), "json", true);

}

<!-- controls for bigger screens -->
<div class="row visible-md visible-lg" style="padding: padding:0px 0px 2px 0px;">
   <div class="col-md-3">
      <div class="btn-group pull-left" role="group" style="display: flex;">
         @if (entity.Name != "Missing Entity") {
            <button id="id_submit" type="submit" title="Search / Refresh" class="btn btn-primary btn-sm">
               <span class="glyphicon glyphicon-search"></span>
            </button>

            <button title="Clear the Parameters" type="button" class="btn btn-info btn-sm clear-button">Clear</button>

            if (hasActions) {
               <div class="btn-group">
                  <button type="button" class="btn btn-sm btn-danger">Action</button>
                  <button type="button" class="btn btn-sm btn-danger dropdown-toggle" data-toggle="dropdown">
                     <span class="caret"></span>
                     <span class="sr-only">Toggle Dropdown</span>
                  </button>
                  <ul class="dropdown-menu" role="menu">
                     @foreach (var action in Model.Process.Actions.Where(a => !a.Before && !a.After && !string.IsNullOrEmpty(a.Description) && !a.Description.StartsWith("Batch", StringComparison.OrdinalIgnoreCase))) {
                        <li>
                           <a class="bulk-action-link" rel="@action.Description" href="javascript:bulkAction(1,'@action.Description',@action.Id);">@action.Description</a>
                        </li>
                     }
                  </ul>
               </div>
            }
         }
      </div>
   </div>

   <div class="col-md-6">

      <div class="visible-md visible-lg">
         @if (entity.Page == 0) {
            <h3 class="text-primary" style="margin: 2px 0px 0px 0px;">@(entity.Label == string.Empty ? entity.Alias : entity.Label)</h3>
         } else {
            <ul class="pagination pagination-sm" style="text-align: center; display: inline !important;">
               @if (entity.Pagination.HasPrevious) {
                  <li><a href="javascript:controls.submit(@entity.Pagination.First)"><span class="glyphicon glyphicon-step-backward"></span></a></li>
                  <li><a href="javascript:controls.submit(@entity.Pagination.Previous)"><span class="glyphicon glyphicon-chevron-left"></span></a></li>
               } else {
                  <li class="disabled"><a href=""><span class="glyphicon glyphicon-step-backward"></span></a></li>
                  <li class="disabled"><a href=""><span class="glyphicon glyphicon-chevron-left"></span></a></li>
               }
               <li class="disabled">
                  @if (entity.Hits > 0) {
                     <a href="">@(entity.Pagination.StartRow.ToString("#,##0"))-@(entity.Pagination.EndRow.ToString("#,##0")) of @(entity.Hits.ToString("#,##0")) <strong>@(entity.Label == string.Empty ? entity.Alias : entity.Label)</strong></a>
                  } else {
                     <a href=""><strong>@(entity.Label == string.Empty ? entity.Alias : entity.Label)</strong></a>
                  }
               </li>

               @if (entity.Pagination.HasNext) {
                  <li><a href="javascript:controls.submit(@entity.Pagination.Next)"><span class="glyphicon glyphicon-chevron-right"></span></a></li>
                  <li><a href="javascript:controls.submit(@entity.Pagination.Last)"><span class="glyphicon glyphicon-step-forward"></span></a></li>
               } else {
                  <li class="disabled"><a href=""><span class="glyphicon glyphicon-chevron-right"></span></a></li>
                  <li class="disabled"><a href=""><span class="glyphicon glyphicon-step-forward"></span></a></li>
               }
            </ul>
         }
      </div>
   </div>

   <div class="col-md-3">
      <div class="btn-group pull-right" role="group" style="display: flex;">

         @if (entity.Name != "Missing Entity") {

            if (orchard.Authorizer.Authorize(Permissions.EditContent)) {
               <button title="edit this report" type="button" class="btn btn-warning btn-sm" onclick="window.open('@(Url.Content("~/Admin/Contents/Edit/" + Model.Part.Id + "?" + Common.ReturnUrlName + "=" + Url.Encode(Request.RawUrl)))', '_self');">
                  <span class="glyphicon glyphicon-edit"></span>
               </button>
            }

            if (Model.Process.Mode == "map") {
               <div class="btn-group" role="group">
                  <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                     Style
                     <span class="caret"></span>
                  </button>
                  <ul class="dropdown-menu" id="mapStyles">
                     @foreach (var style in PipelineConfigurationPart.MapStyles) {
                        <li style="cursor: pointer;"><a id="@style.Value">@style.Text</a></li>
                     }
                  </ul>
               </div>
            }

            if(Model.Part.MapEnabled && hasCoordinates || Model.Part.CalendarEnabled) {
               <div class="btn-group" role="group">
                  <button type="button" class="btn btn-primary btn-sm" onclick="javascript:void(0);">
                     <span class="glyphicon glyphicon-blackboard"></span>
                  </button>
                  <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                     <span class="caret"></span>
                  </button>
                  <ul class="dropdown-menu">
                     <li class="@(Model.Process.Mode == "report" ? "active" : string.Empty)">
                        <a href="@(linkService.Create(Request, Session, Model.Part.Id, Url.Action("Index", "Report", new RouteValueDictionary {{"Id", Model.Part.Id}}), "report", false))">REPORT</a>
                     </li>
                     @if (Model.Part.MapEnabled && hasCoordinates && !string.IsNullOrEmpty(settings.MapBoxToken)) {
                        <li class="@(Model.Process.Mode == "map" ? "active" : string.Empty)"><a href="@(linkService.Create(Request, Session, Model.Part.Id, Url.Action("Index", "Map", new RouteValueDictionary {{"Id", Model.Part.Id}}), "map", false))">MAP</a></li>
                     }
                     @if (Model.Part.CalendarEnabled) {
                        <li class="@(Model.Process.Mode == "calendar" ? "active" : string.Empty)">
                           <a href="@(linkService.Create(Request, Session, Model.Part.Id, Url.Action("Index", "Calendar", new RouteValueDictionary {{"Id", Model.Part.Id}}), "calendar", false))">CALENDAR</a>
                        </li>
                     }
                  </ul>
               </div>
            }

            <div class="btn-group">
               <button type="button" class="btn btn-sm btn-info" onclick="javascript:void(0);">
                  <span class="glyphicon glyphicon-floppy-disk"></span>
               </button>
               <button class="btn dropdown-toggle btn-sm btn-info" data-toggle="dropdown">
                  <span class="caret"></span>
               </button>
               <ul class="dropdown-menu">
                  <li><a href="javascript:window.open('@exportCsvLink', '_self');" title="Excel, Notepad, etc.">CSV</a></li>
                  <li><a href="javascript:window.open('@exportJsonLink', '_self');" title="Javascript Object Notation">JSON</a></li>
                  <li><a href="javascript:window.open('@exportXlsxLink', '_self');" title="Excel">XLSX</a></li>
                  @{
                     if (hasCoordinates) {
                        var exportGeoJsonLink = linkService.Create(Request, Session, Model.Part.Id, Url.Action("Index", "Export", new RouteValueDictionary { { "Id", Model.Part.Id } }), "geojson", true);
                        var exportKmlLink = linkService.Create(Request, Session, Model.Part.Id, Url.Action("Index", "Export", new RouteValueDictionary { { "Id", Model.Part.Id } }), "kml", true);
                        <li><a href="javascript:window.open('@exportGeoJsonLink', '_self');" title="geojson.io, etc.">GEOJSON</a></li>
                        <li><a href="javascript:window.open('@exportKmlLink', '_self');" title="Google Earth, etc.">KML</a></li>
                     }
                  }
               </ul>
            </div>

            if (pageSizes.Count > 1) {
               <div class="btn-group">
                  <button class="btn btn-sm">Size</button>
                  <button class="btn dropdown-toggle btn-sm" data-toggle="dropdown">
                     <span class="caret"></span>
                  </button>
                  <ul class="dropdown-menu">
                     @foreach (var size in pageSizes) {
                        <li class="@(entity.Size.Equals(size) ? "active" : string.Empty)">
                           <a href="javascript:controls.setSize(@size);">@size</a>
                        </li>
                     }
                  </ul>
               </div>
            }
         }
      </div>
   </div>
</div>

<!-- controls for smaller screens -->
<div class="visible-xs visible-sm">

   <!-- using a button toolbar for smaller screens -->
   <div class="btn-toolbar" role="toolbar" aria-label="...">

      <div class="btn-group" role="group" aria-label="...">
         @if (entity.Name != "Missing Entity") {
            <button id="id_submit" type="submit" title="Search" class="btn btn-primary btn-sm">
               <span class="glyphicon glyphicon-search"></span>
            </button>

            <button title="clear" type="button" class="btn btn-info btn-sm clear-button">
               <span class="glyphicon glyphicon-remove-circle"> </span>
            </button>

            if (hasActions) {
               <div class="btn-group">
                  <button type="button" class="btn btn-sm btn-danger">Action</button>
                  <button type="button" class="btn btn-sm btn-danger dropdown-toggle" data-toggle="dropdown">
                     <span class="caret"></span>
                     <span class="sr-only">Toggle Dropdown</span>
                  </button>
                  <ul class="dropdown-menu" role="menu">
                     @foreach (var action in Model.Process.Actions.Where(a => !a.Before && !a.After && !string.IsNullOrEmpty(a.Description) && !a.Description.StartsWith("Batch", StringComparison.OrdinalIgnoreCase))) {
                        <li>
                           <a class="bulk-action-link" rel="@action.Description" href="javascript:bulkAction(1,'@action.Description',@action.Id);">@action.Description</a>
                        </li>
                     }
                  </ul>
               </div>
            }
         }
      </div>

      <div class="btn-group" role="group" aria-label="...">
         <button title="previous page" disabled="@(!entity.Pagination.HasPrevious)" type="button" class="btn btn-default btn-sm" onclick="javascript:controls.submit(@entity.Pagination.Previous);">
            <span class="glyphicon glyphicon-chevron-left"> </span>
         </button>
         <button title="next page" disabled="@(!entity.Pagination.HasNext)" type="button" class="btn btn-default btn-sm" onclick="javascript:controls.submit(@entity.Pagination.Next);">
            <span class="glyphicon glyphicon-chevron-right"> </span>
         </button>
      </div>

      @if (entity.Name != "Missing Entity") {

         <div class="btn-group" role="group" aria-label="...">

            @if (orchard.Authorizer.Authorize(Permissions.EditContent)) {
               <button title="edit this report" type="button" class="btn btn-warning btn-sm" onclick="window.open('@(Url.Content("~/Admin/Contents/Edit/" + Model.Part.Id + "?" + Common.ReturnUrlName + "=" + Url.Encode(Request.RawUrl)))', '_self');">
                  <span class="glyphicon glyphicon-edit"></span>
               </button>
            }

            @if (Model.Process.Mode == "report" && hasCoordinates && !string.IsNullOrEmpty(settings.MapBoxToken)) {
               <button title="view on map" type="button" class="btn btn-success btn-sm" onclick="window.open('@(linkService.Create(Request, Session, Model.Part.Id, Url.Action("Index", "Map", new RouteValueDictionary {{"Id", Model.Part.Id}}), "map", false))', '_self');">
                  <span class="glyphicon glyphicon-map-marker"></span>
               </button>
            }

            @if (Model.Process.Mode == "map") {

               <div class="btn-group" role="group">
                  <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                     Style
                     <span class="caret"></span>
                  </button>
                  <ul class="dropdown-menu" id="mapStyles">
                     @foreach (var style in PipelineConfigurationPart.MapStyles) {
                        <li style="cursor: pointer;"><a id="@style.Value">@style.Text</a></li>
                     }
                  </ul>
               </div>

               <button title="back to data" type="button" class="btn btn-success btn-sm" onclick="window.open('@(linkService.Create(Request, Session, Model.Part.Id, Url.Action("Index", "Report", new RouteValueDictionary {{"Id", Model.Part.Id}}), "report", false))', '_self');">
                  <span class="glyphicon glyphicon-align-justify"></span>
               </button>
            }

            <div class="btn-group">
               <button class="btn btn-sm btn-info">
                  <span class="glyphicon glyphicon-floppy-disk"></span>
               </button>
               <button class="btn dropdown-toggle btn-sm btn-info" data-toggle="dropdown">
                  <span class="caret"></span>
               </button>
               <ul class="dropdown-menu">
                  <li><a href="javascript:window.open('@exportCsvLink', '_self');" title="Excel, Notepad, etc.">CSV</a></li>
                  <li><a href="javascript:window.open('@exportXlsxLink', '_self');" title="Excel">XLSX</a></li>
                  @{
                     if (hasCoordinates) {
                        var exportGeoJsonLink = linkService.Create(Request, Session, Model.Part.Id, Url.Action("Index", "Export", new RouteValueDictionary { { "Id", Model.Part.Id } }), "geojson", true);
                        var exportKmlLink = linkService.Create(Request, Session, Model.Part.Id, Url.Action("Index", "Export", new RouteValueDictionary { { "Id", Model.Part.Id } }), "kml", true);
                        <li><a href="javascript:window.open('@exportGeoJsonLink', '_self');" title="geojson.io, etc.">GEOJSON</a></li>
                        <li><a href="javascript:window.open('@exportKmlLink', '_self');" title="Google Earth, etc.">KML</a></li>
                     }
                  }
               </ul>
            </div>

            @if (pageSizes.Count > 1) {
               <div class="btn-group">
                  <button class="btn btn-sm">Size</button>
                  <button class="btn dropdown-toggle btn-sm" data-toggle="dropdown">
                     <span class="caret"></span>
                  </button>
                  <ul class="dropdown-menu">
                     @foreach (var size in pageSizes) {
                        <li class="@(entity.Size.Equals(size) ? "active" : string.Empty)">
                           <a href="javascript:controls.setSize(@size);">@size</a>
                        </li>
                     }
                  </ul>
               </div>
            }
         </div>
      }
   </div>
</div>



